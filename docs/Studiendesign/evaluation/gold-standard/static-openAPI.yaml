swagger: "3.0"
info:
  description: "API definition is the gold standard. For each implemented rule there are rule violations."
  version: "0.0.1"
  title: "Gold Standard REST-API Rules"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: https://api.example.com/v_1
    description: Violates the underscore rule
  - url: https://api.example.com/v1
    description: Production server (uses live data)
  - url: https://sandbox-api.example.com:8443/v1
    description: Sandbox server (uses test data)
tags:
  - name: "URI Rules"
  - name: "Meta Rules"
  - name: "Representational Rules"
  - name: "HTTP Rules"
  - name: "Client Rules"
schemes:
  - "https"
paths:
  # Define all paths here
  # RULE 19: using other characters instead of forward slash '/'
  .users.{userId}.permissions:
    get:
      summary: Returns a user permission for ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The perimssion of the user to return.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: A users permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified user ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A user with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string

  \users\{userId}\permissions:
    get:
      summary: Returns a user permission for ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The perimssion of the user to return.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: A users permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified user ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A user with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  -users-{userId}-permissions:
    get:
      summary: Returns a user permission for ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The perimssion of the user to return.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: A users permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified user ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A user with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  \#users\#{userId}\#permissions:
    get:
      summary: Returns a user permission for ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The perimssion of the user to return.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: A users permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified user ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A user with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # RULE 1: A trailing forward slash (/) should not be included in URIs
  /users/{userId}/details/:
    get:
      summary: Returns a user permission for ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The details of the user to return.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: A users permissions.
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: The specified user ID is invalid (not a number).
          content:
            text/plain:
              schema:
                type: string
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: A user with the specified ID was not found.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            text/plain:
              schema:
                type: string
  # Rule 28: GET must be used to retrieve a representation of a resource
  # missing resource representation
  /users/{userId}/permissions:
    get:
      summary: Returns a user permission for ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The perimssion of the user to return.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: A users permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified user ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A user with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
    #missing default and HTTP 200 response
  /users/{userId}/status:
    get:
      summary: Returns a user permission for ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The perimssion of the user to return.
          schema:
            type: string
            minimum: 1
      responses:
        "400":
          description: The specified user ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A user with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # Illegal Request Body
  /users/{userId}/rules:
    get:
      summary: Returns a user permission for ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The perimssion of the user to return.
          schema:
            type: string
            minimum: 1
      requestBody:
        content:
          application/json:
            examples:
              basic:
                "$ref": "#/components/examples/post-createNotificationConfiguration-basic"
            schema:
              $ref: "#/components/schemas/CreateNotificationConfigurationRequest"
      responses:
        "200":
          description: A users permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified user ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A user with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # Rule 22: Underscores (_) should not be used in URIs.
  "/primary_school":
    get:
      tag: "URI Rules"
      description: "Violates the underscore rule"
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/{primarySchool}/_school":
    get:
      tag: "URI Rules"
      description: "Violates the underscore rule"
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # Rule 23: Lowercase letters should be preferred in URI paths.
  "/Pets":
    get:
      tag: "URI Rules"
      description: "Get Pets. Violations: Lowercase letters should be preferred in URI paths. Pets should be pets."
      response:
        "200":
          description: "A list of pets"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "The specified user ID is invalid (not a number)."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "A user with the specified ID was not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/pets/{petName}/LocationsStates":
    get:
      tag: "URI Rules"
      description: "Get Pet Locations States. Violations: Lowercase letters should be preferred in URI paths. LocationsStates should be locationsstates"
      response:
        "200":
          description: "A list of locations states given a pet name"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "The specified user ID is invalid (not a number)."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "A user with the specified ID was not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/pets/{petName}/locations/{locationName}/CITY":
    get:
      tag: "URI Rules"
      description: "Get Pet Location City. Violations: Lowercase letters should be preferred in URI paths. CITY should be city."
      response:
        "200":
          description: "City where a pet is located"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "The specified user ID is invalid (not a number)."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "A user with the specified ID was not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/pets/{petName}/addLocation":
    get:
      tag: "URI Rules"
      description: "Add a new location to a pet. Violations: Lowercase letters should be preferred in URI paths. Location should be location"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                "$ref": "#/components/examples/post-createNotificationConfiguration-basic"
            schema:
              $ref: "#/components/schemas/CreateNotificationConfigurationRequest"
      response:
        "200":
          description: "Country where a pet is located"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "The specified user ID is invalid (not a number)."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "A user with the specified ID was not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        summary: "Country where a pet is located"
        tags: "pets"
  # Rule 21: Hyphens (-) should be used to improve the readability of URIs.
  "/bigPets":
    get:
      tag: "URI Rules"
      description: "Violations: Hyphens (and lowercase violation) (-) should be used to improve the readability of URIs. bigPets should be written as big-pets."
      response:
        "200":
          description: "Big cats"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "The specified user ID is invalid (not a number)."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "A user with the specified ID was not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/small.Pets":
    get:
      tag: "URI Rules"
      description: "Violations: Hyphens (and lowercase violation) (-) should be used to improve the readability of URIs. small.Pets should be written as small-pets."
      response:
        "200":
          description: "Small cats"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "The specified user ID is invalid (not a number)."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "A user with the specified ID was not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/MediumSizePets":
    get:
      tag: "URI Rules"
      description: "Violations: Hyphens (and lowercase violation) (-) should be used to improve the readability of URIs. MediumSizePets should be written as medium-size-pets."
      response:
        "200":
          description: "Small cats"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "The specified user ID is invalid (not a number)."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "A user with the specified ID was not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # Rule 27: CRUD function names should not be used in URIs.
  "/getschool":
    get:
      tag: "URI Rules"
      description: "Violates the CRUD (+ Hyphens + forward slash) rule."
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/DELETEschool":
    delete:
      tag: "URI Rules"
      description: "Violates the CRUD (+ Hyphens + forward slash + lowercase) rule."
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/postschool":
    post:
      tag: "URI Rules"
      description: "Violates the CRUD (+ Hyphens + forward slash) rule."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                foo:
                  type: string
                bar:
                  type: string
                baz:
                  type: string
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/putschool":
    put:
      tag: "URI Rules"
      description: "Violates the CRUD (+ Hyphens + forward slash) rule."
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                foo:
                  type: string
                bar:
                  type: string
                baz:
                  type: string
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/getschool/{getSchoolID}/delete":
    delete:
      tag: "URI Rules"
      description: "Violates 2 times the CRUD (+ Hyphens + forward slash) rule."
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # Rule 35: 401 (Unauthorized) must be used when there is a problem with the client's credentials
  "/school":
    get:
      tag: "HTTP Rules"
      description: "Violates the Unauthorized rule."
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # RULE 23: A singular noun should be used for document names
  /animals/pets/{catid}/foods:
    get:
      summary: Returns foods.
      parameters:
        - name: catid
          in: path
          required: true
          description: Food to return.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: Foods for catId.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified cat ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A cat with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string

  /animals/{catId}/Kids/Foods:
    get:
      summary: Returns foods for the kids of a catId.
      parameters:
        - name: userId
          in: path
          required: true
          description: Returns foods for the kids of a catId.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: A cat permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified cat ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A cat with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # RULE 24 and 4: A plural noun should be used for collection or store names
  /animals/pet/{catid}/food:
    get:
      summary: Returns foods.
      parameters:
        - name: catid
          in: path
          required: true
          description: Food to return.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: Foods for catId.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified cat ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: A cat with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string

  /animals/{catId}/Kids/Food/{foodId}:
    get:
      summary: Returns foods for the kids of a catId.
      parameters:
        - name: userId
          in: path
          required: true
          description: Returns foods for the kids of a catId.
          schema:
            type: string
            minimum: 1
      responses:
        "200":
          description: A cat permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: The specified cat ID is invalid (not a number).
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: A cat with the specified ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # Rule 36: File extensions should not be included in URIs
  "/enterprise/locations/employee/info.json":
    get:
      tag: "URI Rules"
      description: "Violates the file extension rule."
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/enterprise/locations/employee/info.JSON":
    get:
      tag: "URI Rules"
      description: "Violates the file extension rule."
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # Rule 38: Content-type must be used
  "/enterprise":
    get:
      tag: "Meta Rules"
      description: "Violates the content-type rule. --> no content defined on 200 responses"
      response:
        "200":
          description: "Successful request"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/enterprise/employees":
    get:
      tag: "Meta Rules"
      description: "Violates the content-type rule. --> no content defined on 200 responses in the ref"
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  "/enterprise/locations":
    post:
      tag: "Meta Rules"
      description: "Violates the content-type rule. --> missing content type in request body."
      requestBody:
        required: true
      response:
        "200":
          description: "Successful request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
  # RULE 5: A verb or verb phrase should be used for controllerA verb or verb phrase should be used for controller names
  /animals/{catId}/Food/{foodId}/deliverFood:
    put:
      summary: Returns foods for the kids of a catId.
      parameters:
        - name: userId
          in: path
          required: true
          description: Returns foods for the kids of a catId.
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: A cat permissions.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: The specified cat ID is invalid (not a number).
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: A cat with the specified ID was not found.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            text/plain:
              schema:
                type: string
  /animals/{catId}/Food/{foodId}/removeFood:
    delete:
      summary: Returns foods for the kids of a catId.
      parameters:
        - name: userId
          in: path
          required: true
          description: Returns foods for the kids of a catId.
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: A cat permissions.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: The specified cat ID is invalid (not a number).
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: A cat with the specified ID was not found.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            text/plain:
              schema:
                type: string
components:
  # Define all components here
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  security:
    - BasicAuth: []
  externalDocs:
    description: "Find out more about Swagger"
    url: "http://swagger.io"
