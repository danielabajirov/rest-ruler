swagger: "3.0"
info:
  description: "API definition is the gold standard. For each implemented rule there are rule violations."
  version: "0.0.1"
  title: "Gold Standard REST-API Rules"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: https://api.example.com/v_1
    description: Violates the underscore rule
  - url: https://api.example.com/v1
    description: Production server (uses live data)
  - url: https://sandbox-api.example.com:8443/v1
    description: Sandbox server (uses test data)
tags:
- name: "URI Rules"
- name: "Meta Rules"
- name: "Representational Rules"
- name: "HTTP Rules"
- name: "Client Rules"
schemes:
- "https"
paths:
  # Define all paths here
  "/primary_school":
    get:
      tag: "URI Rules"
      description: "Violates the underscore rule"
      response:
        "200":
          description: "Successful request"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  "/{primary_school}/_school":
    get:
      tag: "URI Rules"
      description: "Violates the underscore rule"
      response:
        "200":
          description: "Successful request"
        "400":
          description: "Bad request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
  "/Pets":
    get:
      tag: "URI Rules"
      description: "Get Pets. Violations: Lowercase letters should be preferred in URI paths. Pets should be pets."
      response: 
        "200":
          description: "A list of pets"
        "400":
            description: "The specified user ID is invalid (not a number)."
        "401":
          description: "Unauthorized"
        "404":
          description: "A user with the specified ID was not found.""
      summary: "A list of pets"
      tags:
          "pets"
  
  "/pets/{petName}/LocationsStates":
    get:
      tag: "URI Rules"
      description: "Get Pet Locations States. Violations: Lowercase letters should be preferred in URI paths. LocationsStates should be locationsstates"
      response: 
        "200":
          description: "A list of locations states given a pet name"
        "400":
            description: "The specified user ID is invalid (not a number)."
        "401":
          description: "Unauthorized"
        "404":
          description: "A user with the specified ID was not found."
      summary: "A list of locations states given a pet name"
        tags: 
          "pets"

  "/pets/{petName}/locations/{locationName}/CITY":
    get:
      tag: "URI Rules"
      description: "Get Pet Location City. Violations: Lowercase letters should be preferred in URI paths. CITY should be city." 
      response: 
        "200":
          description: "City where a pet is located"
        "400":
            description: "The specified user ID is invalid (not a number)."
        "401":
          description: "Unauthorized"
        "404":
          description: "A user with the specified ID was not found."
      summary: "City where a pet is located"
      tags:
        "pets"
      
  "/pets/{petName}/addLocation": 
    get: 
      tag: "URI Rules"
      description: "Add a new location to a pet. Violations: Lowercase letters should be preferred in URI paths. Location should be location"
      requestBody: 
        content: 
            application/json:
              examples:
                basic: 
                  "$ref": "#/components/examples/post-createNotificationConfiguration-basic"
              schema: 
                $ref: "#/components/schemas/CreateNotificationConfigurationRequest"
                
      response: 
        "200":
          description: "Country where a pet is located"
        "400":
          description: "The specified user ID is invalid (not a number)."
        "401":
          description: "Unauthorized"
        "404":
          description: "A user with the specified ID was not found."
        summary: "Country where a pet is located"
        tags:
          "pets"         
components:
  # Define all components here
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  security:
  - BasicAuth: []
  externalDocs:
    description: "Find out more about Swagger"
    url: "http://swagger.io"