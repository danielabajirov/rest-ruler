openapi: 3.0.3
info:
  description: This is an OpenAPI definition file which contains violations of the rule 'A verb or verb phrase should be used for controller names' created by experts.
  version: 0.1.0
  title: Example OpenAPI Definition File
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.example.com/v1
    description: Production server (uses live data)
  - url: https://sandbox-api.example.com:8443/v1
    description: Sandbox server (uses test data)
paths:
  # Justus (+1 violation)
  /ToDos/{id}:
    get:
      tags:
        - Todos
      description: Returns a todo
      summary: Return todo
      responses:
        200:
          description: Todo object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  # Justus (+1 violation)
  /gameStores/{sid}/videoGames/{gid}:
    post:
      tags:
        - create videogame
      description: Create new videogame object
      summary: Create new videogame object
      responses:
        200:
          description: Species object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Videogame"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  # Sebastian (+1 violation)
  /V1/users/{userId}/CV:
    get:
      tags:
        - CV
      description: Returns Cv
      summary: Return cv
      responses:
        200:
          description: CV object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CV"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  # Ana Franco Da Silva  (+1 violation)
  /users/1/myIssues/13:
    get:
      tags:
        - Issue items
      description: Returns issue
      summary: Return issue
      responses:
        200:
          description: Issue object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issue"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  # Lukas (+1 violation)
  /ENTITIES/{Id}:
    get:
      tags:
        - Entities items
      description: Returns an entities
      summary: Get entities
      parameters:
        - name: Id
          in: path
          required: true
          description: The Id of the entity
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: Entities object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entities"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  # Oliver (+1 violation)
  /PremiumUsers/{userId}:
    get:
      tags:
        - user management
      description: Returns the details of a user identified via ID
      summary: Get a specific user
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A user with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  # Pfaff (+1 violation)
  /Servers/{serverId}:
    get:
      description: Lowercase letters should be preferred in URI paths
      summary: Get a specific Server
      parameters:
        - name: serverId
          in: path
          required: true
          description: The ID of the server
          schema:
            type: string
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Server"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        404:
          description: A server with the specified ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
components:
  schemas:
    Todo:
      description: A Todo
      type: object
      properties:
        todoId:
          type: number
        todoName:
          type: string
        todoDescription:
          type: string
    CV:
      description: CV object
      type: object
      properties:
        CVIds:
          type: integer
        count:
          type: integer
    Videogame:
      description: Videogame object
      type: object
      properties:
        videoGameIds:
          type: integer
        count:
          type: integer
    Issue:
      description: Issue object
      type: object
      properties:
        issueIds:
          type: integer
        count:
          type: integer
    Entities:
      description: Entities object
      type: object
      properties:
        entitiesIds:
          type: integer
        code:
          type: string
    User:
      description: User object
      type: object
      properties:
        userIds:
          type: integer
        size:
          type: string
    Server:
      description: Server object
      type: object
      properties:
        serverIds:
          type: integer
        serverSize:
          type: integer
    GenericResponse:
      description: A generic response object with a message attribute
      type: object
      properties:
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
security:
  - BasicAuth: []
